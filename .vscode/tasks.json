// See https://go.microsoft.com/fwlink/?LinkId=733558
// for the documentation about the tasks.json format
{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "watch",
			"dependsOn": ["npm: build:webview", "npm: dev:webview", "npm: watch:tsc", "npm: watch:esbuild"],
			"presentation": {
				"reveal": "never"
			},
			"group": {
				"kind": "build",
				"isDefault": true
			}
		},
		{
			"type": "npm",
			"script": "build:webview",
			"group": "build",
			"problemMatcher": [],
			"isBackground": true,
			"label": "npm: build:webview",
			"presentation": {
				"group": "watch",
				"reveal": "never",
				"close": true
			},
			"options": {
				"env": {
					"IS_DEV": "true"
				}
			}
		},
		{
			"type": "npm",
			"script": "dev:webview",
			"group": "build",
			"problemMatcher": [
				{
					"pattern": [
						{
							"regexp": ".",
							"file": 1,
							"location": 2,
							"message": 3
						}
					],
					"background": {
						"activeOnStart": true,
						"beginsPattern": ".",
						"endsPattern": "."
					}
				}
			],
			"isBackground": true,
			"label": "npm: dev:webview",
			"presentation": {
				"group": "watch",
				"reveal": "never",
				"close": true
			},
			"options": {
				"env": {
					"IS_DEV": "true"
				}
			}
		},
		{
			"type": "npm",
			"script": "watch:esbuild",
			"group": "build",
			"problemMatcher": "$esbuild-watch",
			"isBackground": true,
			"label": "npm: watch:esbuild",
			"presentation": {
				"group": "watch",
				"reveal": "never",
				"close": true
			}
		},
		{
			"type": "npm",
			"script": "watch:tsc",
			"group": "build",
			"problemMatcher": "$tsc-watch",
			"isBackground": true,
			"label": "npm: watch:tsc",
			"presentation": {
				"group": "watch",
				"reveal": "never",
				"close": true
			}
		},
		{
			"type": "npm",
			"script": "watch-tests",
			"problemMatcher": "$tsc-watch",
			"isBackground": true,
			"presentation": {
				"reveal": "never",
				"group": "watchers"
			},
			"group": "build"
		},
		{
			"label": "tasks: watch-tests",
			"dependsOn": ["npm: watch", "npm: watch-tests"],
			"problemMatcher": []
		},
		{
			"label": "stop",
			"command": "echo ${input:terminate}",
			"type": "shell"
		},
		{
			"type": "npm",
			"script": "test:all",
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"type": "npm",
			"script": "test",
			"group": {
				"kind": "test",
				"isDefault": true
			},
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"type": "npm",
			"script": "test:only",
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "new"
			},
			"problemMatcher": []
		},
		{
			"type": "npm",
			"script": "compile",
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": "$tsc",
			"label": "npm: compile",
			"detail": "Compile all TypeScript files"
		},
		{
			"type": "npm",
			"script": "compile-tests",
			"group": "build",
			"problemMatcher": "$tsc",
			"label": "npm: compile-tests",
			"detail": "Compile test TypeScript files"
		},
		{
			"type": "npm",
			"script": "test:setup-discovery",
			"group": "test",
			"problemMatcher": [],
			"label": "npm: test:setup-discovery",
			"detail": "Setup test discovery for VS Code Test Explorer"
		},
		{
			"type": "npm",
			"script": "test:reliable",
			"group": {
				"kind": "test",
				"isDefault": true
			},
			"problemMatcher": [],
			"label": "npm: test:reliable",
			"detail": "Run all tests with proper environment setup"
		},
		{
			"type": "npm",
			"script": "test:path",
			"group": "test",
			"problemMatcher": [],
			"label": "npm: test:path",
			"detail": "Run path utility tests"
		},
		{
			"type": "npm",
			"script": "test:coverage",
			"group": "test",
			"problemMatcher": [],
			"label": "npm: test:coverage",
			"detail": "Run tests with coverage reporting"
		},
		{
			"label": "Refresh Test Explorer",
			"type": "shell",
			"command": "echo 'Refreshing Test Explorer...' && npm run test:setup-discovery",
			"group": "test",
			"presentation": {
				"reveal": "always",
				"panel": "dedicated"
			},
			"problemMatcher": []
		},
		{
			"label": "Set Up Test Environment",
			"dependsOrder": "sequence",
			"dependsOn": ["npm: compile-tests", "npm: test:setup-discovery"],
			"group": "test",
			"problemMatcher": []
		}
	],
	"inputs": [
		{
			"id": "terminate",
			"type": "command",
			"command": "workbench.action.tasks.terminate",
			"args": "terminateAll"
		}
	]
}
